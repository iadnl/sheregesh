!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.lozad=e()}(this,function(){"use strict";function t(t){t.setAttribute("data-loaded",!0)}var e="undefined"!=typeof document&&document.documentMode,r={rootMargin:"0px",threshold:0,load:function(t){if("picture"===t.nodeName.toLowerCase()){var r=t.querySelector("img"),a=!1;null===r&&(r=document.createElement("img"),a=!0),e&&t.getAttribute("data-iesrc")&&(r.src=t.getAttribute("data-iesrc")),t.getAttribute("data-alt")&&(r.alt=t.getAttribute("data-alt")),a&&t.append(r)}if("video"===t.nodeName.toLowerCase()&&!t.getAttribute("data-src")&&t.children){for(var o=t.children,i=void 0,n=0;n<=o.length-1;n++)(i=o[n].getAttribute("data-src"))&&(o[n].src=i);t.load()}t.getAttribute("data-poster")&&(t.poster=t.getAttribute("data-poster")),t.getAttribute("data-src")&&(t.src=t.getAttribute("data-src")),t.getAttribute("data-srcset")&&t.setAttribute("srcset",t.getAttribute("data-srcset"));var d=",";if(t.getAttribute("data-background-delimiter")&&(d=t.getAttribute("data-background-delimiter")),t.getAttribute("data-background-image"))t.style.backgroundImage="url('"+t.getAttribute("data-background-image").split(d).join("'),url('")+"')";else if(t.getAttribute("data-background-image-set")){var u=t.getAttribute("data-background-image-set").split(d),g=u[0].substr(0,u[0].indexOf(" "))||u[0];g=-1===g.indexOf("url(")?"url("+g+")":g,1===u.length?t.style.backgroundImage=g:t.setAttribute("style",(t.getAttribute("style")||"")+"background-image: "+g+"; background-image: -webkit-image-set("+u+"); background-image: image-set("+u+")")}t.getAttribute("data-toggle-class")&&t.classList.toggle(t.getAttribute("data-toggle-class"))},loaded:function(){}},a=function(t){return"true"===t.getAttribute("data-loaded")},o=function(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document;return t instanceof Element?[t]:t instanceof NodeList?t:e.querySelectorAll(t)};return function(){var e,i,n=0<arguments.length&&void 0!==arguments[0]?arguments[0]:".lozad",d=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},u=Object.assign({},r,d),g=u.root,s=u.rootMargin,c=u.threshold,l=u.load,b=u.loaded,f=void 0;"undefined"!=typeof window&&window.IntersectionObserver&&(f=new IntersectionObserver((e=l,i=b,function(r,o){r.forEach(function(r){(0<r.intersectionRatio||r.isIntersecting)&&(o.unobserve(r.target),a(r.target)||(e(r.target),t(r.target),i(r.target)))})}),{root:g,rootMargin:s,threshold:c}));for(var A,m=o(n,g),v=0;v<m.length;v++)(A=m[v]).getAttribute("data-placeholder-background")&&(A.style.background=A.getAttribute("data-placeholder-background"));return{observe:function(){for(var e=o(n,g),r=0;r<e.length;r++)a(e[r])||(f?f.observe(e[r]):(l(e[r]),t(e[r]),b(e[r])))},triggerLoad:function(e){a(e)||(l(e),t(e),b(e))},observer:f}}});const observer=lozad();observer.observe();